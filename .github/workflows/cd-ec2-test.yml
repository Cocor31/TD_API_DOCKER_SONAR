name: Deploiement continu sur Server

on:
    workflow_call

jobs:
    push:      
      runs-on: ubuntu-latest

      steps:
        - name: Checkout
          uses: actions/checkout@v3
        - name: Docker login
          uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
          with:
            username: ${{ secrets.DOCKERHUB_LOGIN }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

        - name: Extract Metada
          id: meta
          uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
          with:
            images: cocor31/api_docker

        - name: Build and Push
          uses: docker/build-push-action@v4
          with:
            context: .
            file: ./Dockerfile
            push: true
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.label }}
    compose:
        needs: [push]
        runs-on: ubuntu-latest
    
        steps:
          - name: Checkout code
            uses: actions/checkout@v3
          # - name: Configure SSH
          #   uses: webfactory/ssh-agent@v0.5.1
          #   with:
          #     ssh-private-key: ${{ secrets.SSH_KEY }}
          - name: copy via ssh key
            uses: appleboy/scp-action@v0.1.4
            with:
              host: ${{ secrets.SERVER_HOST }}
              username: ${{ secrets.HOST_USERNAME }}
              port: 22
              key: ${{ secrets.SSH_KEY }}
              source: "./docker-compose.yml"
              target: "."    
          # - name: Deploy to EC2
          #   run: |
          #     chmod +x deploy.sh
          #     ssh -o "StrictHostKeyChecking=no" ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 'bash -s' < deploy.sh

        # steps:
        #   - name: Checkout the files
        #     uses: actions/checkout@v3
    
        #   - name: Deploy to Server 1
        #     uses: easingthemes/ssh-deploy@main
        #     env:
        #       SSH_PRIVATE_KEY: ${{ secrets.SSH_KEY }}
        #       REMOTE_HOST: ${{ secrets.HOST_DNS }}
        #       REMOTE_USER: ${{ secrets.HOST_USERNAME }}
        #       SOURCE: "./docker-compose.yml"
        #       TARGET: "."
              

        # steps:
        #   - uses: actions/checkout@v3
        #   - name: Build & Deploy
        #     env:
        #       PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        #       HOSTNAME: ${{secrets.SERVER_HOST}}
        #       USER_NAME: ${{secrets.USER_NAME}}
            
        #     run: |
        #       echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
        #       ssh -o StrictHostKeyChecking=no -i private_key ${HOSTNAME} '
      
        #             # Now we have got the access of EC2 and we will start the deploy .
        #             ls
        #             pwd
        #             '
                
          
 